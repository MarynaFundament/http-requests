{"mappings":"AAAA,MCGMA,EAAgBC,SAASC,cAAc,mBAEvCC,EAAmBF,SAASC,cAAc,oBAM1CE,EAAkCC,IACpC,MAAMC,EAAO,IAAIC,KAAe,IAAVF,GACtB,MAAO,GAAGC,EAAKE,cAAcF,EAAKG,cAAc,EA8BpDT,EAAcU,iBAAiB,UA3BEC,IAC/BA,EAAMC,iBAER,MAAMC,EAAaF,EAAMG,OAAOC,SAASC,aAAaC,MAAMC,ODftB,IAAAC,KCmBfN,EDlBvBO,MAAM,qDAAiBD,iEACtBE,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,IAGvBC,OAAMC,IACLC,QAAQC,KAAKF,EAAI,KCUlBP,MAAKU,IACa,IACRA,EACHC,IAAI,CACAC,QAAS7B,EAAiC2B,EAAKC,IAAIC,SACnDC,OAAQ9B,EAAiC2B,EAAKC,IAAIE,aAO7Db,MAAKU,GAUF,SAAsBI,GAClBN,QAAQO,IAAID,GAEZ,MAAMhB,EAAWgB,EAAYE,KACvBC,EAAOH,EAAYI,KAAKD,KACxBE,EAAYL,EAAYI,KAAKE,WAC7BR,EAAUE,EAAYH,IAAIC,QAC1BC,EAASC,EAAYH,IAAIE,OACzBQ,EAASP,EAAYO,OAAOC,IAE5BC,EAAS,qEACiBzB,qK,6nBAoBhChB,EAAiB0C,UAAYD,C,CAzCvBE,CAAaf,KACCJ,OAArBoB,IACH5C,EAAiB0C,UAAY,2BAC7BhB,QAAQkB,MAAMA,EAAM,GACtB","sources":["src/js/weather-api.js","src/js/openweather.js"],"sourcesContent":["const BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = 'a1f446d78926e645ec409a2ea0b5f127';\n\n\nexport const fetchWeatherByCityName = cityName => \nfetch(`${BASE_URL}?q=${cityName}&lang=en&units=metric&appid=${API_KEY}`)\n.then(response => {\n  if (!response.ok) {\n    throw new Error(response.status);\n  }\n  return response.json();\n})\n// .then(json => console.log(json))\n.catch(err => {\n  console.warn(err);\n});\n","\n\n\nconst weatherFormEl = document.querySelector('.js-search-form')\n// console.log(weatherFormEl)\nconst weatherWrapperEl = document.querySelector('.weather_wrapper')\n// console.log(weatherWrapperEl)\n\nimport {fetchWeatherByCityName} from './weather-api'\n// console.log(fetchWeatherByCityName)\n\nconst convertSecondsToHoursAndMinutes = seconds => {\n    const date = new Date(seconds * 1000);\n    return `${date.getHours()}:${date.getMinutes()}`;\n}\n\nconst handleWeatherFormSubmit = (event) => {\n  event.preventDefault();\n\nconst searchCity = event.target.elements.user_country.value.trim()\n// console.log(searchCity)\n\n\nfetchWeatherByCityName(searchCity)\n.then(data => {\n    const newData ={\n        ...data, \n        sys:{\n            sunrise: convertSecondsToHoursAndMinutes (data.sys.sunrise),\n            sunset: convertSecondsToHoursAndMinutes (data.sys.sunset)\n             \n        }\n    }\n    return newData\n})\n// .then(data => console.log(data))\n.then(data => createMarkup(data)) // Викликайте createMarkup тут і передайте дані\n.catch(error => {\n    weatherWrapperEl.innerHTML = 'Seeked city doesnt exist';\n    console.error(error);\n});\n}\n\nweatherFormEl.addEventListener('submit', handleWeatherFormSubmit)\n\n\n    function createMarkup(weatherData) {\n        console.log(weatherData)\n    \n        const cityName = weatherData.name;\n        const temp = weatherData.main.temp;\n        const feelsLike = weatherData.main.feels_like;\n        const sunrise = weatherData.sys.sunrise;\n        const sunset = weatherData.sys.sunset;\n        const clouds = weatherData.clouds.all;\n        \n        const markup = `<div class=\"weather_card\">\n                <h2 class=\"city-name\">${cityName}</h2>\n                <ul class=\"weather-info list\">\n                    <li class=\"weather-info-item\">\n                        <p class=\"temp\"> Температура: ${temp} &#8451;</p>\n                    </li>\n                    <li class=\"weather-info-item\">\n                        <p class=\"feels-like-temp\"> Відчувається як: ${feelsLike} &#8451;</p>\n                    </li>\n                    <li class=\"weather-info-item\">\n                        <p>Схід сонця: ${(sunrise)}</p>\n                    </li>\n                    <li class=\"weather-info-item\">\n                        <p>Захід сонця: ${(sunset)}</p>\n                    </li>\n                    <li class=\"weather-info-item\">\n                        <p>Хмарність: ${clouds}%</p>\n                    </li>\n                </ul>\n            </div>`;\n    \n        weatherWrapperEl.innerHTML = markup;\n    }\n    \n\n"],"names":["$7b71b2382c4bc2b2$var$weatherFormEl","document","querySelector","$7b71b2382c4bc2b2$var$weatherWrapperEl","$7b71b2382c4bc2b2$var$convertSecondsToHoursAndMinutes","seconds","date","Date","getHours","getMinutes","addEventListener","event","preventDefault","searchCity","target","elements","user_country","value","trim","cityName","fetch","then","response","ok","Error","status","json","catch","err","console","warn","data","sys","sunrise","sunset","weatherData","log","name","temp","main","feelsLike","feels_like","clouds","all","markup","innerHTML","$7b71b2382c4bc2b2$var$createMarkup","error"],"version":3,"file":"openweather.267623bb.js.map"}